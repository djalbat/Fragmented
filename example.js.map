{
  "version": 3,
  "sources": ["src/fragmented.js", "src/example.js"],
  "sourcesContent": ["\"use strict\";\n\nObject.defineProperty(window, \"fragment\", {\n  get: function() {\n    const fragment = getFragment();\n\n    return fragment;\n  },\n\n  set: function(fragment) {\n    const silently = false;\n\n    setFragment(fragment, silently);\n  }\n});\n\nwindow.addEventListener(\"hashchange\", hashChangeListener);\n\nconst fragmentChangeHandlers = [];\n\nfunction getFragment() {\n  const hash = window.location.hash.substr(1),  ///\n        fragment = new String(hash);  ///\n\n  Object.assign(fragment, {\n    getFragment,\n    setFragment,\n    onFragmentChange,\n    offFragmentChange\n  });\n\n  return fragment;\n}\n\nfunction setFragment(fragment, silently = true) {\n  const hash = fragment;  ///\n\n  if (silently) {\n    window.removeEventListener(\"hashchange\", hashChangeListener);\n  }\n\n  window.location.hash = hash;\n\n  if (silently) {\n    setTimeout(() => {\n      window.addEventListener(\"hashchange\", hashChangeListener);\n    }, 0);\n  }\n}\n\nfunction onFragmentChange(fragmentChangeHandler) {\n  fragmentChangeHandlers.push(fragmentChangeHandler);\n}\n\nfunction offFragmentChange(fragmentChangeHandler) {\n  const index = fragmentChangeHandlers.indexOf(fragmentChangeHandler);\n\n  if (index > -1) {\n    const start = index,  ///\n          deleteCount = 1;\n\n    fragmentChangeHandlers.splice(start, deleteCount);\n  }\n}\n\nfunction hashChangeListener() {\n  const hash = window.location.hash.substr(1),  ///\n        fragment = hash;  ///\n\n  fragmentChangeHandlers.forEach((fragmentChangeHandler) => {\n    fragmentChangeHandler(fragment);\n  });\n}\n", "\"use strict\";\n\nimport \"./fragmented\";\n\nconst { onFragmentChange, offFragmentChange } = fragment;\n\nonFragmentChange(fragmentChangeHandler);\n\nconsole.log(fragment)\n\nfragment = \"test\";\n\n// offFragmentChange(fragmentChangeHandler);\n\nfunction fragmentChangeHandler() {\n  console.log(fragment)\n}\n"],
  "mappings": ";;;;;;;;;;;;AAEA,WAAA,eAAA,QAAA,YAAA;MACA,KAAA,eAAA;YACA,YAAA;eAEA;;MAGA,KAAA,aAAA,WAAA;YACA,WAAA;AAEA,oBAAA,WAAA;;;AAIA,WAAA,iBAAA,cAAA;QAEA,yBAAA;2BAEA;UACA,OAAA,OAAA,SAAA,KAAA,OAAA,IACA,YAAA,IAAA,OAAA;AAEA,aAAA,OAAA,WAAA;QACA;QACA;QACA,kBAAA;QACA,mBAAA;;aAGA;;yBAGA,WAAA,OAAA;UAAA,WAAA,UAAA,SAAA,OAAA;UACA,OAAA;UAEA,UAAA;AACA,eAAA,oBAAA,cAAA;;AAGA,aAAA,SAAA,OAAA;UAEA,UAAA;AACA,mBAAA,WAAA;AACA,iBAAA,iBAAA,cAAA;WACA;;;+BAIA,wBAAA;AACA,6BAAA,KAAA;;gCAGA,wBAAA;UACA,QAAA,uBAAA,QAAA;UAEA,QAAA,IAAA;YACA,QAAA,OACA,cAAA;AAEA,+BAAA,OAAA,OAAA;;;kCAIA;UACA,OAAA,OAAA,SAAA,KAAA,OAAA,IACA,YAAA;AAEA,6BAAA,QAAA,SAAA,wBAAA;AACA,+BAAA;;;;;;;;MClEA,mBAAA,SAAA;MAAA,oBAAA,SAAA;AAEA,mBAAA;AAEA,UAAA,IAAA;AAEA,aAAA;mCAIA;AACA,YAAA,IAAA;;",
  "names": []
}
