(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

require("./fragmented");

var _fragment = fragment,
    onFragmentChange = _fragment.onFragmentChange,
    offFragmentChange = _fragment.offFragmentChange;
onFragmentChange(fragmentChangeHandler);
console.log(fragment);
fragment = "test"; // offFragmentChange(fragmentChangeHandler);

function fragmentChangeHandler() {
  console.log(fragment);
}

},{"./fragmented":2}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(window, "fragment", {
  get: function get() {
    var fragment = getFragment();
    return fragment;
  },
  set: function set(fragment) {
    var silently = false;
    setFragment(fragment, silently);
  }
});
window.addEventListener("hashchange", hashChangeListener);
var fragmentChangeHandlers = [];

function getFragment() {
  var hash = window.location.hash.substr(1),
      ///
  fragment = new String(hash); ///

  Object.assign(fragment, {
    getFragment: getFragment,
    setFragment: setFragment,
    onFragmentChange: onFragmentChange,
    offFragmentChange: offFragmentChange
  });
  return fragment;
}

function setFragment(fragment) {
  var silently = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var hash = fragment; ///

  if (silently) {
    window.removeEventListener("hashchange", hashChangeListener);
  }

  window.location.hash = hash;

  if (silently) {
    setTimeout(function () {
      window.addEventListener("hashchange", hashChangeListener);
    }, 0);
  }
}

function onFragmentChange(fragmentChangeHandler) {
  fragmentChangeHandlers.push(fragmentChangeHandler);
}

function offFragmentChange(fragmentChangeHandler) {
  var index = fragmentChangeHandlers.indexOf(fragmentChangeHandler);

  if (index > -1) {
    var start = index,
        ///
    deleteCount = 1;
    fragmentChangeHandlers.splice(start, deleteCount);
  }
}

function hashChangeListener() {
  var hash = window.location.hash.substr(1),
      ///
  fragment = hash; ///

  fragmentChangeHandlers.forEach(function (fragmentChangeHandler) {
    fragmentChangeHandler(fragment);
  });
}

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJsaWIvZXhhbXBsZS5qcyIsImxpYi9mcmFnbWVudGVkLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUE7O0FBRUE7O2dCQUVnRCxRO0lBQXhDLGdCLGFBQUEsZ0I7SUFBa0IsaUIsYUFBQSxpQjtBQUUxQixnQkFBZ0IsQ0FBQyxxQkFBRCxDQUFoQjtBQUVBLE9BQU8sQ0FBQyxHQUFSLENBQVksUUFBWjtBQUVBLFFBQVEsR0FBRyxNQUFYLEMsQ0FFQTs7QUFFQSxTQUFTLHFCQUFULEdBQWlDO0FBQy9CLEVBQUEsT0FBTyxDQUFDLEdBQVIsQ0FBWSxRQUFaO0FBQ0Q7OztBQ2hCRDs7QUFFQSxNQUFNLENBQUMsY0FBUCxDQUFzQixNQUF0QixFQUE4QixVQUE5QixFQUEwQztBQUN4QyxFQUFBLEdBQUcsRUFBRSxlQUFXO0FBQ2QsUUFBTSxRQUFRLEdBQUcsV0FBVyxFQUE1QjtBQUVBLFdBQU8sUUFBUDtBQUNELEdBTHVDO0FBT3hDLEVBQUEsR0FBRyxFQUFFLGFBQVMsUUFBVCxFQUFtQjtBQUN0QixRQUFNLFFBQVEsR0FBRyxLQUFqQjtBQUVBLElBQUEsV0FBVyxDQUFDLFFBQUQsRUFBVyxRQUFYLENBQVg7QUFDRDtBQVh1QyxDQUExQztBQWNBLE1BQU0sQ0FBQyxnQkFBUCxDQUF3QixZQUF4QixFQUFzQyxrQkFBdEM7QUFFQSxJQUFNLHNCQUFzQixHQUFHLEVBQS9COztBQUVBLFNBQVMsV0FBVCxHQUF1QjtBQUNyQixNQUFNLElBQUksR0FBRyxNQUFNLENBQUMsUUFBUCxDQUFnQixJQUFoQixDQUFxQixNQUFyQixDQUE0QixDQUE1QixDQUFiO0FBQUEsTUFBOEM7QUFDeEMsRUFBQSxRQUFRLEdBQUcsSUFBSSxNQUFKLENBQVcsSUFBWCxDQURqQixDQURxQixDQUVlOztBQUVwQyxFQUFBLE1BQU0sQ0FBQyxNQUFQLENBQWMsUUFBZCxFQUF3QjtBQUN0QixJQUFBLFdBQVcsRUFBWCxXQURzQjtBQUV0QixJQUFBLFdBQVcsRUFBWCxXQUZzQjtBQUd0QixJQUFBLGdCQUFnQixFQUFoQixnQkFIc0I7QUFJdEIsSUFBQSxpQkFBaUIsRUFBakI7QUFKc0IsR0FBeEI7QUFPQSxTQUFPLFFBQVA7QUFDRDs7QUFFRCxTQUFTLFdBQVQsQ0FBcUIsUUFBckIsRUFBZ0Q7QUFBQSxNQUFqQixRQUFpQix1RUFBTixJQUFNO0FBQzlDLE1BQU0sSUFBSSxHQUFHLFFBQWIsQ0FEOEMsQ0FDdEI7O0FBRXhCLE1BQUksUUFBSixFQUFjO0FBQ1osSUFBQSxNQUFNLENBQUMsbUJBQVAsQ0FBMkIsWUFBM0IsRUFBeUMsa0JBQXpDO0FBQ0Q7O0FBRUQsRUFBQSxNQUFNLENBQUMsUUFBUCxDQUFnQixJQUFoQixHQUF1QixJQUF2Qjs7QUFFQSxNQUFJLFFBQUosRUFBYztBQUNaLElBQUEsVUFBVSxDQUFDLFlBQVc7QUFDcEIsTUFBQSxNQUFNLENBQUMsZ0JBQVAsQ0FBd0IsWUFBeEIsRUFBc0Msa0JBQXRDO0FBQ0QsS0FGUyxFQUVQLENBRk8sQ0FBVjtBQUdEO0FBQ0Y7O0FBRUQsU0FBUyxnQkFBVCxDQUEwQixxQkFBMUIsRUFBaUQ7QUFDL0MsRUFBQSxzQkFBc0IsQ0FBQyxJQUF2QixDQUE0QixxQkFBNUI7QUFDRDs7QUFFRCxTQUFTLGlCQUFULENBQTJCLHFCQUEzQixFQUFrRDtBQUNoRCxNQUFNLEtBQUssR0FBRyxzQkFBc0IsQ0FBQyxPQUF2QixDQUErQixxQkFBL0IsQ0FBZDs7QUFFQSxNQUFJLEtBQUssR0FBRyxDQUFDLENBQWIsRUFBZ0I7QUFDZCxRQUFNLEtBQUssR0FBRyxLQUFkO0FBQUEsUUFBc0I7QUFDaEIsSUFBQSxXQUFXLEdBQUcsQ0FEcEI7QUFHQSxJQUFBLHNCQUFzQixDQUFDLE1BQXZCLENBQThCLEtBQTlCLEVBQXFDLFdBQXJDO0FBQ0Q7QUFDRjs7QUFFRCxTQUFTLGtCQUFULEdBQThCO0FBQzVCLE1BQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxRQUFQLENBQWdCLElBQWhCLENBQXFCLE1BQXJCLENBQTRCLENBQTVCLENBQWI7QUFBQSxNQUE4QztBQUN4QyxFQUFBLFFBQVEsR0FBRyxJQURqQixDQUQ0QixDQUVKOztBQUV4QixFQUFBLHNCQUFzQixDQUFDLE9BQXZCLENBQStCLFVBQVMscUJBQVQsRUFBZ0M7QUFDN0QsSUFBQSxxQkFBcUIsQ0FBQyxRQUFELENBQXJCO0FBQ0QsR0FGRDtBQUdEIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBcIi4vZnJhZ21lbnRlZFwiO1xuXG5jb25zdCB7IG9uRnJhZ21lbnRDaGFuZ2UsIG9mZkZyYWdtZW50Q2hhbmdlIH0gPSBmcmFnbWVudDtcblxub25GcmFnbWVudENoYW5nZShmcmFnbWVudENoYW5nZUhhbmRsZXIpO1xuXG5jb25zb2xlLmxvZyhmcmFnbWVudClcblxuZnJhZ21lbnQgPSBcInRlc3RcIjtcblxuLy8gb2ZmRnJhZ21lbnRDaGFuZ2UoZnJhZ21lbnRDaGFuZ2VIYW5kbGVyKTtcblxuZnVuY3Rpb24gZnJhZ21lbnRDaGFuZ2VIYW5kbGVyKCkge1xuICBjb25zb2xlLmxvZyhmcmFnbWVudClcbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkod2luZG93LCBcImZyYWdtZW50XCIsIHtcbiAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICBjb25zdCBmcmFnbWVudCA9IGdldEZyYWdtZW50KCk7XG5cbiAgICByZXR1cm4gZnJhZ21lbnQ7XG4gIH0sXG5cbiAgc2V0OiBmdW5jdGlvbihmcmFnbWVudCkge1xuICAgIGNvbnN0IHNpbGVudGx5ID0gZmFsc2U7XG5cbiAgICBzZXRGcmFnbWVudChmcmFnbWVudCwgc2lsZW50bHkpO1xuICB9XG59KTtcblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJoYXNoY2hhbmdlXCIsIGhhc2hDaGFuZ2VMaXN0ZW5lcik7XG5cbmNvbnN0IGZyYWdtZW50Q2hhbmdlSGFuZGxlcnMgPSBbXTtcblxuZnVuY3Rpb24gZ2V0RnJhZ21lbnQoKSB7XG4gIGNvbnN0IGhhc2ggPSB3aW5kb3cubG9jYXRpb24uaGFzaC5zdWJzdHIoMSksICAvLy9cbiAgICAgICAgZnJhZ21lbnQgPSBuZXcgU3RyaW5nKGhhc2gpOyAgLy8vXG5cbiAgT2JqZWN0LmFzc2lnbihmcmFnbWVudCwge1xuICAgIGdldEZyYWdtZW50LFxuICAgIHNldEZyYWdtZW50LFxuICAgIG9uRnJhZ21lbnRDaGFuZ2UsXG4gICAgb2ZmRnJhZ21lbnRDaGFuZ2VcbiAgfSk7XG5cbiAgcmV0dXJuIGZyYWdtZW50O1xufVxuXG5mdW5jdGlvbiBzZXRGcmFnbWVudChmcmFnbWVudCwgc2lsZW50bHkgPSB0cnVlKSB7XG4gIGNvbnN0IGhhc2ggPSBmcmFnbWVudDsgIC8vL1xuXG4gIGlmIChzaWxlbnRseSkge1xuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwiaGFzaGNoYW5nZVwiLCBoYXNoQ2hhbmdlTGlzdGVuZXIpO1xuICB9XG5cbiAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBoYXNoO1xuXG4gIGlmIChzaWxlbnRseSkge1xuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImhhc2hjaGFuZ2VcIiwgaGFzaENoYW5nZUxpc3RlbmVyKTtcbiAgICB9LCAwKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBvbkZyYWdtZW50Q2hhbmdlKGZyYWdtZW50Q2hhbmdlSGFuZGxlcikge1xuICBmcmFnbWVudENoYW5nZUhhbmRsZXJzLnB1c2goZnJhZ21lbnRDaGFuZ2VIYW5kbGVyKTtcbn1cblxuZnVuY3Rpb24gb2ZmRnJhZ21lbnRDaGFuZ2UoZnJhZ21lbnRDaGFuZ2VIYW5kbGVyKSB7XG4gIGNvbnN0IGluZGV4ID0gZnJhZ21lbnRDaGFuZ2VIYW5kbGVycy5pbmRleE9mKGZyYWdtZW50Q2hhbmdlSGFuZGxlcik7XG5cbiAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICBjb25zdCBzdGFydCA9IGluZGV4LCAgLy8vXG4gICAgICAgICAgZGVsZXRlQ291bnQgPSAxO1xuXG4gICAgZnJhZ21lbnRDaGFuZ2VIYW5kbGVycy5zcGxpY2Uoc3RhcnQsIGRlbGV0ZUNvdW50KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBoYXNoQ2hhbmdlTGlzdGVuZXIoKSB7XG4gIGNvbnN0IGhhc2ggPSB3aW5kb3cubG9jYXRpb24uaGFzaC5zdWJzdHIoMSksICAvLy9cbiAgICAgICAgZnJhZ21lbnQgPSBoYXNoOyAgLy8vXG5cbiAgZnJhZ21lbnRDaGFuZ2VIYW5kbGVycy5mb3JFYWNoKGZ1bmN0aW9uKGZyYWdtZW50Q2hhbmdlSGFuZGxlcikge1xuICAgIGZyYWdtZW50Q2hhbmdlSGFuZGxlcihmcmFnbWVudCk7XG4gIH0pO1xufVxuIl19
