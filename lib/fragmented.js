'use strict';

(function () {
  var changeHandlers = [];

  window.onhashchange = function () {
    changeHandlers.forEach(function (changeHandler) {
      changeHandler();
    });
  };

  function getFragment() {
    var hash = window.location.hash,
        fragment = hash.substr(1),
        ///
    fragmentPrototype = Object.getPrototypeOf(fragment);

    fragmentPrototype.onChange = function (changeHandler) {
      changeHandlers.push(changeHandler);
    };

    fragmentPrototype.offChange = function (changeHandler) {
      var index = changeHandlers.indexOf(changeHandler);

      if (index > -1) {
        changeHandlers.splice(index, 1);
      }
    };

    return fragment;
  }

  function setFragment(fragment) {
    var hash = fragment; ///

    window.location.hash = hash;
  }

  Object.defineProperty(window, 'fragment', {
    get: getFragment,
    set: setFragment
  });
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2VzNi9mcmFnbWVudGVkLmpzIl0sIm5hbWVzIjpbImNoYW5nZUhhbmRsZXJzIiwid2luZG93Iiwib25oYXNoY2hhbmdlIiwiZm9yRWFjaCIsImNoYW5nZUhhbmRsZXIiLCJnZXRGcmFnbWVudCIsImhhc2giLCJsb2NhdGlvbiIsImZyYWdtZW50Iiwic3Vic3RyIiwiZnJhZ21lbnRQcm90b3R5cGUiLCJPYmplY3QiLCJnZXRQcm90b3R5cGVPZiIsIm9uQ2hhbmdlIiwicHVzaCIsIm9mZkNoYW5nZSIsImluZGV4IiwiaW5kZXhPZiIsInNwbGljZSIsInNldEZyYWdtZW50IiwiZGVmaW5lUHJvcGVydHkiLCJnZXQiLCJzZXQiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLENBQUMsWUFBVztBQUNWLE1BQU1BLGlCQUFpQixFQUF2Qjs7QUFFQUMsU0FBT0MsWUFBUCxHQUFzQixZQUFXO0FBQy9CRixtQkFBZUcsT0FBZixDQUF1QixVQUFTQyxhQUFULEVBQXdCO0FBQzdDQTtBQUNELEtBRkQ7QUFHRCxHQUpEOztBQU1BLFdBQVNDLFdBQVQsR0FBdUI7QUFDckIsUUFBTUMsT0FBT0wsT0FBT00sUUFBUCxDQUFnQkQsSUFBN0I7QUFBQSxRQUNNRSxXQUFXRixLQUFLRyxNQUFMLENBQVksQ0FBWixDQURqQjtBQUFBLFFBQ2tDO0FBQzVCQyx3QkFBb0JDLE9BQU9DLGNBQVAsQ0FBc0JKLFFBQXRCLENBRjFCOztBQUlBRSxzQkFBa0JHLFFBQWxCLEdBQTZCLFVBQVNULGFBQVQsRUFBd0I7QUFDbERKLHFCQUFlYyxJQUFmLENBQW9CVixhQUFwQjtBQUNGLEtBRkQ7O0FBSUFNLHNCQUFrQkssU0FBbEIsR0FBOEIsVUFBU1gsYUFBVCxFQUF3QjtBQUNwRCxVQUFNWSxRQUFRaEIsZUFBZWlCLE9BQWYsQ0FBdUJiLGFBQXZCLENBQWQ7O0FBRUEsVUFBSVksUUFBUSxDQUFDLENBQWIsRUFBZ0I7QUFDZGhCLHVCQUFla0IsTUFBZixDQUFzQkYsS0FBdEIsRUFBNkIsQ0FBN0I7QUFDRDtBQUNGLEtBTkQ7O0FBUUEsV0FBT1IsUUFBUDtBQUNEOztBQUVELFdBQVNXLFdBQVQsQ0FBcUJYLFFBQXJCLEVBQStCO0FBQzdCLFFBQU1GLE9BQU9FLFFBQWIsQ0FENkIsQ0FDTDs7QUFFeEJQLFdBQU9NLFFBQVAsQ0FBZ0JELElBQWhCLEdBQXVCQSxJQUF2QjtBQUNEOztBQUVESyxTQUFPUyxjQUFQLENBQXNCbkIsTUFBdEIsRUFBOEIsVUFBOUIsRUFBMEM7QUFDeENvQixTQUFLaEIsV0FEbUM7QUFFeENpQixTQUFLSDtBQUZtQyxHQUExQztBQUlELENBdkNEIiwiZmlsZSI6ImZyYWdtZW50ZWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbihmdW5jdGlvbigpIHtcbiAgY29uc3QgY2hhbmdlSGFuZGxlcnMgPSBbXTtcblxuICB3aW5kb3cub25oYXNoY2hhbmdlID0gZnVuY3Rpb24oKSB7XG4gICAgY2hhbmdlSGFuZGxlcnMuZm9yRWFjaChmdW5jdGlvbihjaGFuZ2VIYW5kbGVyKSB7XG4gICAgICBjaGFuZ2VIYW5kbGVyKCk7XG4gICAgfSlcbiAgfTtcblxuICBmdW5jdGlvbiBnZXRGcmFnbWVudCgpIHtcbiAgICBjb25zdCBoYXNoID0gd2luZG93LmxvY2F0aW9uLmhhc2gsXG4gICAgICAgICAgZnJhZ21lbnQgPSBoYXNoLnN1YnN0cigxKSwgIC8vL1xuICAgICAgICAgIGZyYWdtZW50UHJvdG90eXBlID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKGZyYWdtZW50KTtcblxuICAgIGZyYWdtZW50UHJvdG90eXBlLm9uQ2hhbmdlID0gZnVuY3Rpb24oY2hhbmdlSGFuZGxlcikge1xuICAgICAgIGNoYW5nZUhhbmRsZXJzLnB1c2goY2hhbmdlSGFuZGxlcik7XG4gICAgfTtcblxuICAgIGZyYWdtZW50UHJvdG90eXBlLm9mZkNoYW5nZSA9IGZ1bmN0aW9uKGNoYW5nZUhhbmRsZXIpIHtcbiAgICAgIGNvbnN0IGluZGV4ID0gY2hhbmdlSGFuZGxlcnMuaW5kZXhPZihjaGFuZ2VIYW5kbGVyKTtcblxuICAgICAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICAgICAgY2hhbmdlSGFuZGxlcnMuc3BsaWNlKGluZGV4LCAxKVxuICAgICAgfVxuICAgIH07XG5cbiAgICByZXR1cm4gZnJhZ21lbnQ7XG4gIH1cblxuICBmdW5jdGlvbiBzZXRGcmFnbWVudChmcmFnbWVudCkge1xuICAgIGNvbnN0IGhhc2ggPSBmcmFnbWVudDsgIC8vL1xuXG4gICAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBoYXNoO1xuICB9XG5cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHdpbmRvdywgJ2ZyYWdtZW50Jywge1xuICAgIGdldDogZ2V0RnJhZ21lbnQsXG4gICAgc2V0OiBzZXRGcmFnbWVudFxuICB9KTtcbn0pKCk7XG4iXX0=