"use strict";

Object.defineProperty(window, "fragment", {
  get: function get() {
    var fragment = getFragment();
    return fragment;
  },
  set: function set(fragment) {
    var silently = false;
    setFragment(fragment, silently);
  }
});
window.addEventListener("hashchange", hashChangeListener);
var fragmentChangeHandlers = [];

function getFragment() {
  var hash = window.location.hash.substr(1),
      ///
  fragment = new String(hash); ///

  Object.assign(fragment, {
    getFragment: getFragment,
    setFragment: setFragment,
    onFragmentChange: onFragmentChange,
    offFragmentChange: offFragmentChange
  });
  return fragment;
}

function setFragment(fragment) {
  var silently = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var hash = fragment; ///

  if (silently) {
    window.removeEventListener("hashchange", hashChangeListener);
  }

  window.location.hash = hash;

  if (silently) {
    setTimeout(function () {
      window.addEventListener("hashchange", hashChangeListener);
    }, 0);
  }
}

function onFragmentChange(fragmentChangeHandler) {
  fragmentChangeHandlers.push(fragmentChangeHandler);
}

function offFragmentChange(fragmentChangeHandler) {
  var index = fragmentChangeHandlers.indexOf(fragmentChangeHandler);

  if (index > -1) {
    var start = index,
        ///
    deleteCount = 1;
    fragmentChangeHandlers.splice(start, deleteCount);
  }
}

function hashChangeListener() {
  var hash = window.location.hash.substr(1),
      ///
  fragment = hash; ///

  fragmentChangeHandlers.forEach(function (fragmentChangeHandler) {
    fragmentChangeHandler(fragment);
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZyYWdtZW50ZWQuanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJ3aW5kb3ciLCJnZXQiLCJmcmFnbWVudCIsImdldEZyYWdtZW50Iiwic2V0Iiwic2lsZW50bHkiLCJzZXRGcmFnbWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJoYXNoQ2hhbmdlTGlzdGVuZXIiLCJmcmFnbWVudENoYW5nZUhhbmRsZXJzIiwiaGFzaCIsImxvY2F0aW9uIiwic3Vic3RyIiwiU3RyaW5nIiwiYXNzaWduIiwib25GcmFnbWVudENoYW5nZSIsIm9mZkZyYWdtZW50Q2hhbmdlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInNldFRpbWVvdXQiLCJmcmFnbWVudENoYW5nZUhhbmRsZXIiLCJwdXNoIiwiaW5kZXgiLCJpbmRleE9mIiwic3RhcnQiLCJkZWxldGVDb3VudCIsInNwbGljZSIsImZvckVhY2giXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE1BQXRCLEVBQThCLFVBQTlCLEVBQTBDO0FBQ3hDQyxFQUFBQSxHQUFHLEVBQUUsZUFBVztBQUNkLFFBQU1DLFFBQVEsR0FBR0MsV0FBVyxFQUE1QjtBQUVBLFdBQU9ELFFBQVA7QUFDRCxHQUx1QztBQU94Q0UsRUFBQUEsR0FBRyxFQUFFLGFBQVNGLFFBQVQsRUFBbUI7QUFDdEIsUUFBTUcsUUFBUSxHQUFHLEtBQWpCO0FBRUFDLElBQUFBLFdBQVcsQ0FBQ0osUUFBRCxFQUFXRyxRQUFYLENBQVg7QUFDRDtBQVh1QyxDQUExQztBQWNBTCxNQUFNLENBQUNPLGdCQUFQLENBQXdCLFlBQXhCLEVBQXNDQyxrQkFBdEM7QUFFQSxJQUFNQyxzQkFBc0IsR0FBRyxFQUEvQjs7QUFFQSxTQUFTTixXQUFULEdBQXVCO0FBQ3JCLE1BQU1PLElBQUksR0FBR1YsTUFBTSxDQUFDVyxRQUFQLENBQWdCRCxJQUFoQixDQUFxQkUsTUFBckIsQ0FBNEIsQ0FBNUIsQ0FBYjtBQUFBLE1BQThDO0FBQ3hDVixFQUFBQSxRQUFRLEdBQUcsSUFBSVcsTUFBSixDQUFXSCxJQUFYLENBRGpCLENBRHFCLENBRWU7O0FBRXBDWixFQUFBQSxNQUFNLENBQUNnQixNQUFQLENBQWNaLFFBQWQsRUFBd0I7QUFDdEJDLElBQUFBLFdBQVcsRUFBWEEsV0FEc0I7QUFFdEJHLElBQUFBLFdBQVcsRUFBWEEsV0FGc0I7QUFHdEJTLElBQUFBLGdCQUFnQixFQUFoQkEsZ0JBSHNCO0FBSXRCQyxJQUFBQSxpQkFBaUIsRUFBakJBO0FBSnNCLEdBQXhCO0FBT0EsU0FBT2QsUUFBUDtBQUNEOztBQUVELFNBQVNJLFdBQVQsQ0FBcUJKLFFBQXJCLEVBQWdEO0FBQUEsTUFBakJHLFFBQWlCLHVFQUFOLElBQU07QUFDOUMsTUFBTUssSUFBSSxHQUFHUixRQUFiLENBRDhDLENBQ3RCOztBQUV4QixNQUFJRyxRQUFKLEVBQWM7QUFDWkwsSUFBQUEsTUFBTSxDQUFDaUIsbUJBQVAsQ0FBMkIsWUFBM0IsRUFBeUNULGtCQUF6QztBQUNEOztBQUVEUixFQUFBQSxNQUFNLENBQUNXLFFBQVAsQ0FBZ0JELElBQWhCLEdBQXVCQSxJQUF2Qjs7QUFFQSxNQUFJTCxRQUFKLEVBQWM7QUFDWmEsSUFBQUEsVUFBVSxDQUFDLFlBQVc7QUFDcEJsQixNQUFBQSxNQUFNLENBQUNPLGdCQUFQLENBQXdCLFlBQXhCLEVBQXNDQyxrQkFBdEM7QUFDRCxLQUZTLEVBRVAsQ0FGTyxDQUFWO0FBR0Q7QUFDRjs7QUFFRCxTQUFTTyxnQkFBVCxDQUEwQkkscUJBQTFCLEVBQWlEO0FBQy9DVixFQUFBQSxzQkFBc0IsQ0FBQ1csSUFBdkIsQ0FBNEJELHFCQUE1QjtBQUNEOztBQUVELFNBQVNILGlCQUFULENBQTJCRyxxQkFBM0IsRUFBa0Q7QUFDaEQsTUFBTUUsS0FBSyxHQUFHWixzQkFBc0IsQ0FBQ2EsT0FBdkIsQ0FBK0JILHFCQUEvQixDQUFkOztBQUVBLE1BQUlFLEtBQUssR0FBRyxDQUFDLENBQWIsRUFBZ0I7QUFDZCxRQUFNRSxLQUFLLEdBQUdGLEtBQWQ7QUFBQSxRQUFzQjtBQUNoQkcsSUFBQUEsV0FBVyxHQUFHLENBRHBCO0FBR0FmLElBQUFBLHNCQUFzQixDQUFDZ0IsTUFBdkIsQ0FBOEJGLEtBQTlCLEVBQXFDQyxXQUFyQztBQUNEO0FBQ0Y7O0FBRUQsU0FBU2hCLGtCQUFULEdBQThCO0FBQzVCLE1BQU1FLElBQUksR0FBR1YsTUFBTSxDQUFDVyxRQUFQLENBQWdCRCxJQUFoQixDQUFxQkUsTUFBckIsQ0FBNEIsQ0FBNUIsQ0FBYjtBQUFBLE1BQThDO0FBQ3hDVixFQUFBQSxRQUFRLEdBQUdRLElBRGpCLENBRDRCLENBRUo7O0FBRXhCRCxFQUFBQSxzQkFBc0IsQ0FBQ2lCLE9BQXZCLENBQStCLFVBQVNQLHFCQUFULEVBQWdDO0FBQzdEQSxJQUFBQSxxQkFBcUIsQ0FBQ2pCLFFBQUQsQ0FBckI7QUFDRCxHQUZEO0FBR0QiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KHdpbmRvdywgXCJmcmFnbWVudFwiLCB7XG4gIGdldDogZnVuY3Rpb24oKSB7XG4gICAgY29uc3QgZnJhZ21lbnQgPSBnZXRGcmFnbWVudCgpO1xuXG4gICAgcmV0dXJuIGZyYWdtZW50O1xuICB9LFxuXG4gIHNldDogZnVuY3Rpb24oZnJhZ21lbnQpIHtcbiAgICBjb25zdCBzaWxlbnRseSA9IGZhbHNlO1xuXG4gICAgc2V0RnJhZ21lbnQoZnJhZ21lbnQsIHNpbGVudGx5KTtcbiAgfVxufSk7XG5cbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiaGFzaGNoYW5nZVwiLCBoYXNoQ2hhbmdlTGlzdGVuZXIpO1xuXG5jb25zdCBmcmFnbWVudENoYW5nZUhhbmRsZXJzID0gW107XG5cbmZ1bmN0aW9uIGdldEZyYWdtZW50KCkge1xuICBjb25zdCBoYXNoID0gd2luZG93LmxvY2F0aW9uLmhhc2guc3Vic3RyKDEpLCAgLy8vXG4gICAgICAgIGZyYWdtZW50ID0gbmV3IFN0cmluZyhoYXNoKTsgIC8vL1xuXG4gIE9iamVjdC5hc3NpZ24oZnJhZ21lbnQsIHtcbiAgICBnZXRGcmFnbWVudCxcbiAgICBzZXRGcmFnbWVudCxcbiAgICBvbkZyYWdtZW50Q2hhbmdlLFxuICAgIG9mZkZyYWdtZW50Q2hhbmdlXG4gIH0pO1xuXG4gIHJldHVybiBmcmFnbWVudDtcbn1cblxuZnVuY3Rpb24gc2V0RnJhZ21lbnQoZnJhZ21lbnQsIHNpbGVudGx5ID0gdHJ1ZSkge1xuICBjb25zdCBoYXNoID0gZnJhZ21lbnQ7ICAvLy9cblxuICBpZiAoc2lsZW50bHkpIHtcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImhhc2hjaGFuZ2VcIiwgaGFzaENoYW5nZUxpc3RlbmVyKTtcbiAgfVxuXG4gIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gaGFzaDtcblxuICBpZiAoc2lsZW50bHkpIHtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJoYXNoY2hhbmdlXCIsIGhhc2hDaGFuZ2VMaXN0ZW5lcik7XG4gICAgfSwgMCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gb25GcmFnbWVudENoYW5nZShmcmFnbWVudENoYW5nZUhhbmRsZXIpIHtcbiAgZnJhZ21lbnRDaGFuZ2VIYW5kbGVycy5wdXNoKGZyYWdtZW50Q2hhbmdlSGFuZGxlcik7XG59XG5cbmZ1bmN0aW9uIG9mZkZyYWdtZW50Q2hhbmdlKGZyYWdtZW50Q2hhbmdlSGFuZGxlcikge1xuICBjb25zdCBpbmRleCA9IGZyYWdtZW50Q2hhbmdlSGFuZGxlcnMuaW5kZXhPZihmcmFnbWVudENoYW5nZUhhbmRsZXIpO1xuXG4gIGlmIChpbmRleCA+IC0xKSB7XG4gICAgY29uc3Qgc3RhcnQgPSBpbmRleCwgIC8vL1xuICAgICAgICAgIGRlbGV0ZUNvdW50ID0gMTtcblxuICAgIGZyYWdtZW50Q2hhbmdlSGFuZGxlcnMuc3BsaWNlKHN0YXJ0LCBkZWxldGVDb3VudCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaGFzaENoYW5nZUxpc3RlbmVyKCkge1xuICBjb25zdCBoYXNoID0gd2luZG93LmxvY2F0aW9uLmhhc2guc3Vic3RyKDEpLCAgLy8vXG4gICAgICAgIGZyYWdtZW50ID0gaGFzaDsgIC8vL1xuXG4gIGZyYWdtZW50Q2hhbmdlSGFuZGxlcnMuZm9yRWFjaChmdW5jdGlvbihmcmFnbWVudENoYW5nZUhhbmRsZXIpIHtcbiAgICBmcmFnbWVudENoYW5nZUhhbmRsZXIoZnJhZ21lbnQpO1xuICB9KTtcbn1cbiJdfQ==