'use strict';

Object.defineProperty(window, 'fragment', {
  get: function get() {
    var fragment = getFragment();

    return fragment;
  },

  set: function set(fragment) {
    var furtively = false;

    setFragment(fragment, furtively);
  }
});

window.addEventListener('hashchange', hashChangeHandler);

var changeHandlers = [];

function getFragment() {
  var hash = window.location.hash.substr(1),
      ///
  fragment = new String(hash); ///

  Object.assign(fragment, {
    getFragment: getFragment,
    setFragment: setFragment,
    onFragmentChange: onFragmentChange,
    offFragmentChange: offFragmentChange
  });

  return fragment;
}

function setFragment(fragment) {
  var furtively = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  var hash = fragment; ///

  if (furtively) {
    window.removeEventListener('hashchange', hashChangeHandler);
  }

  window.location.hash = hash;

  if (furtively) {
    window.addEventListener('hashchange', hashChangeHandler);
  }
}

function onFragmentChange(changeHandler) {
  changeHandlers.push(changeHandler);
}

function offFragmentChange(changeHandler) {
  var index = changeHandlers.indexOf(changeHandler);

  if (index > -1) {
    var start = index,
        ///
    deleteCount = 1;

    changeHandlers.splice(start, deleteCount);
  }
}

function hashChangeHandler() {
  changeHandlers.forEach(function (changeHandler) {
    changeHandler();
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2VzNi9mcmFnbWVudGVkLmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5Iiwid2luZG93IiwiZ2V0IiwiZnJhZ21lbnQiLCJnZXRGcmFnbWVudCIsInNldCIsImZ1cnRpdmVseSIsInNldEZyYWdtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImhhc2hDaGFuZ2VIYW5kbGVyIiwiY2hhbmdlSGFuZGxlcnMiLCJoYXNoIiwibG9jYXRpb24iLCJzdWJzdHIiLCJTdHJpbmciLCJhc3NpZ24iLCJvbkZyYWdtZW50Q2hhbmdlIiwib2ZmRnJhZ21lbnRDaGFuZ2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY2hhbmdlSGFuZGxlciIsInB1c2giLCJpbmRleCIsImluZGV4T2YiLCJzdGFydCIsImRlbGV0ZUNvdW50Iiwic3BsaWNlIiwiZm9yRWFjaCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLE9BQU9DLGNBQVAsQ0FBc0JDLE1BQXRCLEVBQThCLFVBQTlCLEVBQTBDO0FBQ3hDQyxPQUFLLGVBQVc7QUFDZCxRQUFNQyxXQUFXQyxhQUFqQjs7QUFFQSxXQUFPRCxRQUFQO0FBQ0QsR0FMdUM7O0FBT3hDRSxPQUFLLGFBQVNGLFFBQVQsRUFBbUI7QUFDdEIsUUFBTUcsWUFBWSxLQUFsQjs7QUFFQUMsZ0JBQVlKLFFBQVosRUFBc0JHLFNBQXRCO0FBQ0Q7QUFYdUMsQ0FBMUM7O0FBY0FMLE9BQU9PLGdCQUFQLENBQXdCLFlBQXhCLEVBQXNDQyxpQkFBdEM7O0FBRUEsSUFBTUMsaUJBQWlCLEVBQXZCOztBQUVBLFNBQVNOLFdBQVQsR0FBdUI7QUFDckIsTUFBTU8sT0FBT1YsT0FBT1csUUFBUCxDQUFnQkQsSUFBaEIsQ0FBcUJFLE1BQXJCLENBQTRCLENBQTVCLENBQWI7QUFBQSxNQUE4QztBQUN4Q1YsYUFBVyxJQUFJVyxNQUFKLENBQVdILElBQVgsQ0FEakIsQ0FEcUIsQ0FFZTs7QUFFcENaLFNBQU9nQixNQUFQLENBQWNaLFFBQWQsRUFBd0I7QUFDdEJDLGlCQUFhQSxXQURTO0FBRXRCRyxpQkFBYUEsV0FGUztBQUd0QlMsc0JBQWtCQSxnQkFISTtBQUl0QkMsdUJBQW1CQTtBQUpHLEdBQXhCOztBQU9BLFNBQU9kLFFBQVA7QUFDRDs7QUFFRCxTQUFTSSxXQUFULENBQXFCSixRQUFyQixFQUFpRDtBQUFBLE1BQWxCRyxTQUFrQix1RUFBTixJQUFNOztBQUMvQyxNQUFNSyxPQUFPUixRQUFiLENBRCtDLENBQ3ZCOztBQUV4QixNQUFJRyxTQUFKLEVBQWU7QUFDYkwsV0FBT2lCLG1CQUFQLENBQTJCLFlBQTNCLEVBQXlDVCxpQkFBekM7QUFDRDs7QUFFRFIsU0FBT1csUUFBUCxDQUFnQkQsSUFBaEIsR0FBdUJBLElBQXZCOztBQUVBLE1BQUlMLFNBQUosRUFBZTtBQUNiTCxXQUFPTyxnQkFBUCxDQUF3QixZQUF4QixFQUFzQ0MsaUJBQXRDO0FBQ0Q7QUFDRjs7QUFFRCxTQUFTTyxnQkFBVCxDQUEwQkcsYUFBMUIsRUFBeUM7QUFDdkNULGlCQUFlVSxJQUFmLENBQW9CRCxhQUFwQjtBQUNEOztBQUVELFNBQVNGLGlCQUFULENBQTJCRSxhQUEzQixFQUEwQztBQUN4QyxNQUFNRSxRQUFRWCxlQUFlWSxPQUFmLENBQXVCSCxhQUF2QixDQUFkOztBQUVBLE1BQUlFLFFBQVEsQ0FBQyxDQUFiLEVBQWdCO0FBQ2QsUUFBTUUsUUFBUUYsS0FBZDtBQUFBLFFBQXNCO0FBQ2hCRyxrQkFBYyxDQURwQjs7QUFHQWQsbUJBQWVlLE1BQWYsQ0FBc0JGLEtBQXRCLEVBQTZCQyxXQUE3QjtBQUNEO0FBQ0Y7O0FBRUQsU0FBU2YsaUJBQVQsR0FBNkI7QUFDM0JDLGlCQUFlZ0IsT0FBZixDQUF1QixVQUFTUCxhQUFULEVBQXdCO0FBQzdDQTtBQUNELEdBRkQ7QUFHRCIsImZpbGUiOiJmcmFnbWVudGVkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkod2luZG93LCAnZnJhZ21lbnQnLCB7XG4gIGdldDogZnVuY3Rpb24oKSB7XG4gICAgY29uc3QgZnJhZ21lbnQgPSBnZXRGcmFnbWVudCgpO1xuXG4gICAgcmV0dXJuIGZyYWdtZW50O1xuICB9LFxuXG4gIHNldDogZnVuY3Rpb24oZnJhZ21lbnQpIHtcbiAgICBjb25zdCBmdXJ0aXZlbHkgPSBmYWxzZTtcblxuICAgIHNldEZyYWdtZW50KGZyYWdtZW50LCBmdXJ0aXZlbHkpO1xuICB9XG59KTtcblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2hhc2hjaGFuZ2UnLCBoYXNoQ2hhbmdlSGFuZGxlcik7XG5cbmNvbnN0IGNoYW5nZUhhbmRsZXJzID0gW107XG5cbmZ1bmN0aW9uIGdldEZyYWdtZW50KCkge1xuICBjb25zdCBoYXNoID0gd2luZG93LmxvY2F0aW9uLmhhc2guc3Vic3RyKDEpLCAgLy8vXG4gICAgICAgIGZyYWdtZW50ID0gbmV3IFN0cmluZyhoYXNoKTsgIC8vL1xuXG4gIE9iamVjdC5hc3NpZ24oZnJhZ21lbnQsIHtcbiAgICBnZXRGcmFnbWVudDogZ2V0RnJhZ21lbnQsXG4gICAgc2V0RnJhZ21lbnQ6IHNldEZyYWdtZW50LFxuICAgIG9uRnJhZ21lbnRDaGFuZ2U6IG9uRnJhZ21lbnRDaGFuZ2UsXG4gICAgb2ZmRnJhZ21lbnRDaGFuZ2U6IG9mZkZyYWdtZW50Q2hhbmdlXG4gIH0pO1xuXG4gIHJldHVybiBmcmFnbWVudDtcbn1cblxuZnVuY3Rpb24gc2V0RnJhZ21lbnQoZnJhZ21lbnQsIGZ1cnRpdmVseSA9IHRydWUpIHtcbiAgY29uc3QgaGFzaCA9IGZyYWdtZW50OyAgLy8vXG5cbiAgaWYgKGZ1cnRpdmVseSkge1xuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdoYXNoY2hhbmdlJywgaGFzaENoYW5nZUhhbmRsZXIpO1xuICB9XG5cbiAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBoYXNoO1xuXG4gIGlmIChmdXJ0aXZlbHkpIHtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignaGFzaGNoYW5nZScsIGhhc2hDaGFuZ2VIYW5kbGVyKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBvbkZyYWdtZW50Q2hhbmdlKGNoYW5nZUhhbmRsZXIpIHtcbiAgY2hhbmdlSGFuZGxlcnMucHVzaChjaGFuZ2VIYW5kbGVyKTtcbn1cblxuZnVuY3Rpb24gb2ZmRnJhZ21lbnRDaGFuZ2UoY2hhbmdlSGFuZGxlcikge1xuICBjb25zdCBpbmRleCA9IGNoYW5nZUhhbmRsZXJzLmluZGV4T2YoY2hhbmdlSGFuZGxlcik7XG5cbiAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICBjb25zdCBzdGFydCA9IGluZGV4LCAgLy8vXG4gICAgICAgICAgZGVsZXRlQ291bnQgPSAxO1xuXG4gICAgY2hhbmdlSGFuZGxlcnMuc3BsaWNlKHN0YXJ0LCBkZWxldGVDb3VudCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaGFzaENoYW5nZUhhbmRsZXIoKSB7XG4gIGNoYW5nZUhhbmRsZXJzLmZvckVhY2goZnVuY3Rpb24oY2hhbmdlSGFuZGxlcikge1xuICAgIGNoYW5nZUhhbmRsZXIoKTtcbiAgfSk7XG59XG4iXX0=